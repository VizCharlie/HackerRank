import java.util.*;
import java.math.BigInteger;

public class Solution {	
	static	ArrayList<BigInteger> list = new ArrayList<BigInteger>();
	
	public static BigInteger getSubString(String plates, int length, BigInteger count, BigInteger num){
		int index_x, index_y;
		String subString;

		for(index_x = 0; index_x < length; index_x++){
			for(index_y = 1; index_y <= length - index_x; index_y++){
				subString = plates.substring(index_x, index_x + index_y);
				if(!(subString.charAt(0) == '0') || (int) subString.charAt(subString.length() - 1) % 2 != 0){
					num = new BigInteger(subString);
					if(list.contains(num)){
						//System.out.println(num);
						count = count.add(BigInteger.ONE);
					}
				}
			}
		}
				
		return count;
	}
	
	public static void main(String[] args){
		Scanner input = new Scanner(System.in);
		int index, testCase, length;
		String plates;
		BigInteger allPow = new BigInteger("2"), num = new BigInteger("0"), count = BigInteger.ZERO;
				
		for(index = 0; index <= 800; index++){
			list.add(allPow.pow(index));
		}
		
		testCase = input.nextInt();

		while(testCase-- > 0){
			plates = input.next();
			length = plates.length();
			System.out.println(getSubString(plates, length, count, num));
		}		
	}	
}
